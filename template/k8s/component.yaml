# 对于env/base/property中属性的property-type字段，优先解析env下面的全部属性，具体的解析方式如下:
#   separator: 表明此属性作为其他子属性的存放空间（类似于文件夹），需要分析下面的属性才有意义。
#   value: 表明此属性的属性值为定值，其对应的父属性还具有子属性（与property-type同级）：
#     property-value: 属性值的定值。
#   config: 表明此属性的属性值来自于k8s的json文件内，其对应的父属性还具有子属性列表property-find-str（与property-type同级，列表的目的是防止json中有些字段存在多种状态，可能存在也可能不存在，按列表顺序依次查询以避免异常）。
#   logging: 属性值来自于logging信息，包含如下参数：
#     property-query-address: logging信息的请求地址。
#     property-query-type: logging信息的请求类型，如GET、POST等。
#     property-query-params: logging信息的请求附带参数，内部为自定义的属性键值对，规则与一般property相同。
#   tracing: 属性值来自于tracing信息，包含如下参数：
#     property-query-address: tracing信息的请求地址。
#     property-query-type: tracing信息的请求类型，如GET、POST等。
#     property-query-params: tracing信息的请求附带参数，内部为自定义的属性键值对，规则与一般property相同。
#   metrics: 属性值来自于metrics信息，包含如下参数：
#     property-query-address: metrics信息的请求地址。
#     property-query-type: metrics信息的请求类型，如GET、POST等。
#     property-query-params: metrics信息的请求附带参数，内部为自定义的属性键值对，规则与一般property相同。
#     property-unit：metrics信息的单位，""表示没有单位。
#   aggregator: 属性值为聚合值，需根据多个角度的数据共同确定，包含如下参数：
#     property-query-address: aggregator信息的请求地址。
#     property-query-type: aggregator信息的请求类型，如GET、POST等。
#     property-query-params: aggregator信息的请求附带参数，内部为自定义的属性键值对，规则与一般property相同。
#   connector: 属性值来源于其他具有关系的实体，包含如下参数：
#     entity-kind: 实体类别，如Service等；
#     entity-property-find-str: 需要的属性值在其他相关实体中的位置，解析方式同property-find-str。
# 此外，全部类型的属性都可能包括的共同属性有：
#   property-visible: 若属性存在此属性且值为"hidden"，标识其所在的父属性在最终nodes中不保存，主要作用为构建关系过程中的关联字段。
#
# 对于relationship中的关系信息，最上层的key代表关系名称，每种关系具有如下属性字段：
#   entity-kind: 实体类别，如Service等；
#   filter: 筛选条件，目前包括如下几种：
#     - config_value(find_str_a) <<<< config_value(find_str_b): 主要针对Kubernetes中的label选择机制，如一个实体的selector label在另一个里面都出现，表明存在关系。find_str与property-find-str的解析方式相同。当解析值为json时，左边的键值对全部包含在右边中符合条件；当解析值为字符串时，左边的字符串包含于右边中符合条件。
#     - config_value(find_str_a) ==== config_value(find_str_b): 针对通过字段信息关联的实体，如Pod和Node，====表示两端对象的值完全相同。
#     - config_value(find_str_a) >>>> config_value(find_str_b): 与<<<<的表达信息相反。
#     注：find_str_a代表当前实体从k8s-config中解析的字符串，find_str_b代表检查是否存在关系的目标实体中解析的字符串（即，按///切分后，直接在实体信息而不是k8s-config中寻找目标字段值）
#   direction: 决定关系的方向，reverse代表从目标实体指向当前实体，forward代表从当前实体指向目标实体
#
# 特殊情况：
# 1. 不论在何处出现$$str$$这种格式，一律将其解析为环境变量中对应的值，不遵循上述规则；解析完成后，仍然存在两种情况：
#    - 此属性仍需要解析（property-type非value），去掉$$str$$的余下部分根据解析规则，解析完成后，与环境变量的解析值按照对应位置进行字符串拼接；
#    - 此属性不需要解析，直接做字符串拼接。
# 2. property-type为config的属性中，property-value包含///***///，***表示中间为任意字符（不建议使用）
# 3. property-type为config的属性中，property-value包含...///，...表示退回info_position的上一级查找属性

info_position:

env:
  id:
    property-type: config
    property-find-str:
      - componentID
  name:
    property-type: config
    property-find-str:
      - name
  prefix:
    property-type: value
    property-value: http://uvc05/component/

base:
  id:
    property-type: value
    property-value: $$id$$
  name:
    property-type: config
    property-find-str:
      - $$prefix$$name
  stime:
    property-type: connector
    property-find-str:
      - stime
  etime:
    property-type: connector
    property-find-str:
      - etime
  label:
    property-type: value
    property-value:
      - Component

property:
  query:
    business:
      status:
        property-type: logging
        property-query-address: ""
        property-query-type: GET
        property-query-params: ""
      statusCode:
        property-type: logging
        property-query-address: ""
        property-query-type: GET
        property-query-params: ""
      errorCode:
        property-type: logging
        property-query-address: ""
        property-query-type: GET
        property-query-params: ""
      message:
        property-type: logging
        property-query-address: ""
        property-query-type: GET
        property-query-params: ""
      errorMessage:
        property-type: logging
        property-query-address: ""
        property-query-type: GET
        property-query-params: ""
    traffic:
      sendTrafficInfoRate:
        property-type: metrics
        property-query-address: ""
        property-query-type: GET
        property-query-params: ""
        property-unit: ""
      receiveTrafficInfoRate:
        property-type: metrics
        property-query-address: ""
        property-query-type: GET
        property-query-params: ""
        property-unit: ""
    resource:
      namespace:
        property-type: connector
        relation-kind: is_composed_of
        entity-property-find-str: property///query///resource///namespace
      serviceName:
        property-type: connector
        relation-kind: is_composed_of
        entity-property-find-str: property///query///resource///serviceName
      podName:
        property-type: connector
        relation-kind: is_composed_of
        entity-property-find-str: property///query///resource///podName
      containerId:
        property-type: connector
        relation-kind: is_composed_of
        entity-property-find-str: property///query///resource///containerId
      componentName:
        property-type: config
        property-find-str:
          - name
      priority:
        property-type: config
        property-find-str:
          - priority


relationship:
  is_composed_of:
    entity-type: container
    filter: ...///metadata///uid ==== id
    direction: reverse